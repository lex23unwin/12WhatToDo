(()=>{"use strict";const e={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let t;const n=new Uint8Array(16);function o(){if(!t&&(t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!t))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return t(n)}const s=[];for(let e=0;e<256;++e)s.push((e+256).toString(16).slice(1));const r=function(t,n,r){if(e.randomUUID&&!n&&!t)return e.randomUUID();const a=(t=t||{}).random||(t.rng||o)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,n){r=r||0;for(let e=0;e<16;++e)n[r+e]=a[e];return n}return function(e,t=0){return s[e[t+0]]+s[e[t+1]]+s[e[t+2]]+s[e[t+3]]+"-"+s[e[t+4]]+s[e[t+5]]+"-"+s[e[t+6]]+s[e[t+7]]+"-"+s[e[t+8]]+s[e[t+9]]+"-"+s[e[t+10]]+s[e[t+11]]+s[e[t+12]]+s[e[t+13]]+s[e[t+14]]+s[e[t+15]]}(a)};class a{constructor(e){this.name=e,this.tasks=[],this.id=r()}addTask=e=>{this.tasks.includes(e)||this.tasks.push(e)};deleteTask=e=>{this.tasks=this.tasks.filter((e=>{}))}}const c=(()=>{let e=[];const t=e=>{const[t]=c.projects.filter((e=>{e.name}));return t};return{projects:e,clearAllProjects:()=>{e=[]},addProject:e=>{c.projects.some((t=>{t.name.toLowerCase(),e.name.toLowerCase()}))?alert("Duplicate project name, please enter a unique project name"):c.projects.push(e)},deleteProject:e=>{c.projects=c.projects.filter((t=>proj!==e))},getProjectByName:t,addInbox:()=>{t()||c.projects.push(new a("Inbox"))},getInboxProject:()=>{const[e]=c.projects.filter((e=>{e.name}));return e},getTaskById:(e,t)=>{const[n]=t.tasks.filter((e=>{e.id}));return n}}})(),d=c;function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function l(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}class u{constructor(e,t,n){this.title=e,this.dueDate=void 0,this.completed=!1,this.id=r()}addDueDate=e=>{const t=new Date(e);(function(e){if(l(1,arguments),!function(e){return l(1,arguments),e instanceof Date||"object"===i(e)&&"[object Date]"===Object.prototype.toString.call(e)}(e)&&"number"!=typeof e)return!1;var t=function(e){l(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===i(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(e);return!isNaN(Number(t))})(t)&&(this.dueDate=t)};toggleCompleted=()=>{this.completed=!this.completed};createTaskFromStorage=e=>{this.title=e.title,this.description=e.description,this.completed=e.completed,this.priority=e.priority,this.addDueDate(e.dueDate)}}(()=>{const e=document.getElementById("nav-projects-content"),t=document.getElementById("new-project-button"),n=document.getElementById("pop-up-form"),o=document.getElementById("project-title"),s=document.getElementById("pop-up-add-project"),r=document.getElementById("main-tasks-header"),c=document.getElementById("main-tasks-content-none"),i=document.querySelector("#main-tasks-content-form"),l=(document.getElementById("new-task-button"),document.getElementById("form-id")),m=document.getElementById("task-title"),p=(document.getElementById("project-name"),document.getElementById("datetime-btn")),y=document.getElementById("main-tasks-content"),f=document.getElementById("form-x"),g=document.getElementById("form-x2");let h="";function b(e){y.innerHTML="",e.tasks.forEach((t=>{const n=document.createElement("div");n.classList.add("task-item-display");const o=document.createElement("div");o.textContent=t.title;const s=document.createElement("div");s.textContent=function(e){if(""==e)return"No Due Date";{const t={year:"numeric",month:"long",day:"numeric"};return e.toLocaleDateString(void 0,t)}}(t.dueDate);const r=document.createElement("button");r.classList.add("delete-task-button"),r.textContent="X",r.addEventListener("click",(()=>{e.deleteTask(t),b(h)})),n.appendChild(o),n.appendChild(s),n.appendChild(r),y.appendChild(n)}))}t.addEventListener("click",(()=>{s.style.display="flex"})),g.addEventListener("click",(()=>{o.value="",s.style.display="none"})),n.addEventListener("submit",(()=>{const t=o.value,n=new a(t);d.addProject(n),function(t){const n=document.createElement("div");n.classList.add("project-item"),n.textContent=t.name,function(e,t){t.addEventListener("click",(()=>{b(e),h=e,r.textContent=e.name,c.textContent="";const t=document.createTextNode("Click on the plus sign to add more tasks!"),n=document.createElement("i");n.classList.add("fas","fa-plus"),n.style.cursor="pointer",function(e){e.addEventListener("click",(()=>{i.style.display="flex"}))}(n),c.appendChild(n),c.appendChild(t)}))}(t,n),e.appendChild(n)}(n),s.style.display="none",o.value=""})),f.addEventListener("click",(e=>{e.preventDefault(),console.log("we in here"),m.value="",p.value="",console.log(" reseting"),i.style.display="none",console.log("switched display")})),l.addEventListener("submit",(e=>{e.preventDefault();const t=function(e,t){const n=new u(e);return n.addDueDate(t),n}(m.value,p.value);h.addTask(t),m.value="",p.value="",i.style.display="none",b(h)}))})()})();